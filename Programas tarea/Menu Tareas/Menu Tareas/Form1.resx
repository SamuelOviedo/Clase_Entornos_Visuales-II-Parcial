<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8kwpr/JsGI/yXBi/8lwVL/JMF4/ybBiP8m
        wYj/JMF3/yXCU/8lwYv/JsGI/yXBmQAAAAAAAAAAAAAAAAAAAAD/LLOA/7W7/v+0un7/LLOA/yyzgP+1
        u77/tbu+/yyzgP8ss4D/tLp+/7W7/v8ss4AAAAAAAAAAAAAAAAAAAAAA/zGlg//FcYX/tXhI/zGmeP8x
        poH/xHNk/8RzZP8xpoH/MKZ5/7V4SP/FcYX/MaWDAAAAAAAAAAAAAAAAAAAAAP82mVD/NpiI/zeYfv89
        nhX/Npgv/zeYhv83mIb/Npgv/zqXFv83mH7/NpiI/zeYTwAAAAAAAAAAAAAAAAAAAAD/PYt1/zyLiP88
        i4j/Po0x/z2KU/88i4j/PIuI/zuMUv8+jTH/PIyH/zyLiP87inQAAAAAAAAAAAAAAAAAAAAA/0J8f/+v
        1rr/r9Vc/0J8f/9CfH//rteL/67Xi/9CfH//Qnx//6/VXP+v1rr/Qnx/AAAAAAAAAAAAAAAAAAAAAP9I
        cH//wI7J/7+OY/9IcH//SHB//76Plv++j5b/SHB//0hwf/+/jmP/wI7J/0hwfwAAAAAAAAAAAAAAAAAA
        AAD/TmJ1/09jiP9PY4j/TmMx/01iU/9PY4j/T2OI/05kUv9OYzH/TWKH/09jiP9NY3QAAAAAAAAAAAAA
        AAAAAAAA/1NWTf9UVnf/VFRz/1VVFf9RVy//VFZ3/1RWd/9RVy//UVEW/1RUc/9UVnf/U1ZNAAAAAAAA
        AAAAAAAAAAAAAP9aSID/reN2/6PXQP9ZSHj/WkiA/6viWP+r4lj/WkiA/1lIef+j10D/reN2/1pIgAAA
        AAAAAAAAAAAAAAAAAAD/YDqA/7yc/f+8m33/YDqA/2A6gP+8nb3/vJ29/2A6gP9gOoD/vJt9/7yc/f9g
        OoAAAAAAAAAAAAAAAAAAAAAA/2Ytj/9lLXf/ZSx5/2UsUf9mLXH/ZS13/2Utd/9mLXH/ZCxS/2Usef9l
        LXf/Zi2PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAAxmMAAMgTAADNswAA7ncAAOZnAADudwAA7ncAAOZn
        AAD//wAA3bsAAMgTAADf+wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        Ci/0Ukov99vb7/g4HB//////////////////////
</value>
  </data>
</root>